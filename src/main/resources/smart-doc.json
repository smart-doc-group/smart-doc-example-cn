{
  "serverUrl": "http://{{host}}:{{port}}",
  "isStrict": false,
  "outPath": "target/doc",
  "allInOne": true,
  "coverOld": true,
  "createDebugPage": true,
  "style": "xt256",
  "packageFilters": "",
  "appKey": "20210318821914523354005504",
  "appToken": "61b69195f14344e5b9e6469852b6fc4d",
  "secret": "XnYjaDbK^stIJyQ5RZOCJ.VAEYOscB7C",
  "openUrl": "http://192.168.240.127:7700/api",
  "md5EncryptedHtmlName": true,
  "projectName": "smartdoc",
  "tornaDebug": true,
  "inlineEnum": true,
  "skipTransientField": true,
  "requestHeaders": [
    //设置请求头，没有需求可以不设置
    {
      "name": "token",
      //请求头名称
      "type": "string",
      //请求头类型
      "desc": "desc",
      //请求头描述信息
      "value": "kk",
      //不设置默认null
      "required": false,
      //是否必须
      "since": "-",
      //      什么版本添加的改请求头
      "pathPatterns": "/InnovateFruit/**"
      //      "excludePathPatterns": "/app/login" // 登录url=/app/page/将不会有该请求头
    },
    {
      "name": "global-headers",
      "type": "string",
      "desc": "desc",
      //请求头描述信息
      "value": "any string",
      //不设置默认null
      "required": false,
      //是否必须
      "since": "2.5.3",
      //什么版本添加的改请求头
      "pathPatterns": "/headers/*",
      "excludePathPatterns": "/headers/set-exclude-header"
    },
    {
      "name": "specific-headers",
      "type": "string",
      "desc": "desc",
      //请求头描述信息
      "value": "any string",
      //不设置默认null
      "required": false,
      //是否必须
      "since": "2.5.3",
      //什么版本添加的改请求头
      "pathPatterns": "/headers/set-specific-header"
    }
  ],
  "requestParams": [
    //设置请求头，没有需求可以不设置
    {
      "name": "configPathParam",
      //请求头名称
      "type": "string",
      //请求头类型
      "desc": "desc",
      //请求头描述信息
      "paramIn": "path",
      // 参数所在位置 header-请求头, path-路径参数, query-参数
      "value": "testPath",
      //不设置默认null
      "required": false,
      //是否必须
      "since": "-",
      //什么版本添加的改请求头
      "pathPatterns": "*"
      //正则表达式过滤请求头
    },
    {
      "name": "configQueryParam",
      //请求头名称
      "type": "string",
      //请求头类型
      "desc": "desc",
      //请求头描述信息
      "paramIn": "query",
      "value": "testQuery",
      //不设置默认null
      "required": false,
      //是否必须
      "since": "-",
      //什么版本添加的改请求头
      "pathPatterns": "*"
      //正则表达式过滤请求头
    }
  ],
  "errorCodeDictionaries": [
    {
      //错误码列表，没有需求可以不设置
      "title": "title",
      "enumClassName": "com.power.common.enums.HttpCodeEnum",
      //错误码枚举类,如果是枚举是在一个类中定义则用$链接类BaseErrorCode$Common
      "codeField": "code",
      //错误码的code码字段名称
      "descField": "message"
      //错误码的描述信息对应的字段名
    }
  ],
  "rpcApiDependencies": [
    {
      // 项目开放的dubbo api接口模块依赖，配置后输出到文档方便使用者集成
      "artifactId": "SpringBoot2-Dubbo-Api",
      "groupId": "com.demo",
      "version": "1.0.0"
    }
  ],
  "apiConstants": [
    {
      "constantsClassName": "com.power.doc.constants.RequestParamConstant"
    },
    {
      "constantsClassName": "com.power.doc.constants.RequestValueConstant"
    },
    {
      "constantsClassName": "com.power.doc.constants.ApiVersion"
    },
    {
      "constantsClassName": "com.power.doc.constants.RequestHeadValue"
    },
    {
      "constantsClassName": "org.springframework.http.HttpHeaders"
    }
  ],
  "dataDictionaries": [
    {
      //配置数据字典，没有需求可以不设置
      "title": "http状态码字典",
      //数据字典的名称
      "enumClassName": "com.power.common.enums.HttpCodeEnum",
      //数据字典枚举类名称
      "codeField": "code",
      //数据字典字典码对应的字段名称
      "descField": "message"
      //数据字典对象的描述信息字典
    }
  ],
  "customRequestFields": [
    {
      "name": "start",
      "ownerClassName": "com.gitee.fastmybatis.core.query.param.PageParam",
      "value": "0",
      "required": false,
      "ignore": true
    },
    {
      "name": "limit",
      "ownerClassName": "com.gitee.fastmybatis.core.query.param.PageParam",
      "value": "0",
      "required": false,
      "ignore": true
    }
  ],
  "groups": [
    {
      "name": "API Meta Info Usecase",
      "apis": "com.power.doc.usecase.rest.api.meta.*"
    },
    {
      "name": "Path Parameters Usecase",
      "apis": "com.power.doc.usecase.rest.api.path.parameter.*"
    },
    {
      "name": "Request Headers Usecase",
      "apis": "com.power.doc.usecase.rest.api.headers.*"
    },
    {
      "name": "Query Parameters Usecase",
      "apis": "com.power.doc.usecase.rest.api.query.parameter.*"
    },
    {
      "name": "Body Parameters Usecase",
      "apis": "com.power.doc.usecase.rest.api.body.parameter.*"
    },
    {
      "name": "Response Fields Usecase",
      "apis": "com.power.doc.usecase.rest.api.response.*"
    },
    {
      "name": "测试分组",
      // @since 2.2.5, 对不同的controller进行分组
      "apis": "com.power.doc.controller.*"
    }
  ]
}